services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./config/backend.env
    volumes:
      - ${HOME}/.config/gcloud/application_default_credentials.json:/app/service-account-key.json:ro
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/service-account-key.json
      - GOOGLE_CLOUD_PROJECT=gdg-on-campus-challenge
    depends_on:
      - some-postgres
      - redis
      - checkpoint-zenfi
    restart: unless-stopped
    command: 
      - /bin/sh
      - -c
      - |
        echo 'Waiting for some-postgres (5432) and checkpoint-zenfi (5434) to be ready...' &&
        while ! nc -z some-postgres 5432; do
          sleep 1
        done &&
        while ! nc -z checkpoint-zenfi 5432; do
          sleep 1
        done &&
        echo 'Both databases are ready!' &&
        echo 'Installing Google Vertex Ai Package' &&
        uv pip install -U langchain-google-vertexai &&
        uv pip install psycopg2-binary &&
        uv run alembic upgrade head &&
        echo "Starting FastAPI in production mode (no file watching)" &&
        export PYTHONPATH=/app &&
        uv run fastapi run app/api/main.py --host 0.0.0.0 --port 8000
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:3000"
    env_file:
      - ./config/frontend.env
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  some-postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=postgres
    volumes:
      - some_postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network
    
  checkpoint-zenfi:
    image: postgres:15
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - checkpoint_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
volumes:
  some_postgres:
  redis_data:
  checkpoint_data: